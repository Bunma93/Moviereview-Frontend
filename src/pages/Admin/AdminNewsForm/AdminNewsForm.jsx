import React, { useEffect, useState } from 'react';
import { Form, Input, DatePicker, Select, Button, Upload, message, Divider, Avatar, Modal } from 'antd';
import { PlusOutlined, UserOutlined } from '@ant-design/icons';
import axios from '../../../config/axios';
import styles from './AdminNewsForm.module.scss';

const AdminNewsForm = () => {
    const [movieNewsList, setMovieNewsList] = useState([]);
    const [newsFileList, setNewsFileList] = useState([]);
    const [newsFile, setNewsFile] = useState([]);

    const fetchMovieNewsList = async() => {
        const httpResponse = await axios.get('/movienews');
        console.log("üîç Response ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:", httpResponse);  // ‡∏î‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        console.log("üìå Data ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å API:", httpResponse.data);  // ‡∏î‡∏π‡πÄ‡∏â‡∏û‡∏≤‡∏∞ data
        setMovieNewsList(httpResponse.data);
    }

    useEffect(() => {
        fetchMovieNewsList();
    },[]);

    const [form] = Form.useForm();

    const handleNewsChange = ({ fileList }) => {
        setNewsFileList(fileList);
        if (fileList.length > 0) {
          setNewsFile(fileList[0].originFileObj);
        } else {
          setNewsFile(null);
        }
    };

    const handleSubmit = async (values) => {
        const token = localStorage.getItem('ACCESS_TOKEN');
        if (!token) {
            message.error('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }

        const formData = new FormData();
        Object.keys(values).forEach((key) => {
          formData.append(key, values[key]);
        });

        if (newsFile) formData.append('newsimagePath', newsFile);

         try {
              await axios.post('/movienews/addNews', formData, {
                headers: { 
                  'Content-Type': 'multipart/form-data',
                },
              });
              message.success('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
              form.resetFields();
              setNewsFile(null);
              setNewsFileList([]);
              fetchMovieNewsList();
            } catch (error) {
            // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ error.response ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á‡∏Å‡πà‡∏≠‡∏ô
              if (error.response) {
                console.error("Error response:", error.response);
                message.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ' + (error.response.data?.message || error.message));
              } else {
                // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ response ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
                console.error("Error message:", error.message);
                message.error('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå');
              }
            }
    };

    const uploadButton = (
        <button style={{ border: 0, background: 'none',color:"black" }} type="button">
        <PlusOutlined />
        <div style={{ marginTop: 8, color:"black" ,fontSize:"12px"}}>‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ</div>
        </button>
    );

    return (
        <div>
            <Form form={form} layout="vertical" onFinish={handleSubmit}>
                <Form.Item label="‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß" name="title" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß' }]}>
                <Input placeholder="‡πÉ‡∏™‡πà‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏Ç‡πà‡∏≤‡∏ß" />
                </Form.Item>

                <Form.Item label="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß" name="content" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß' }]}>
                <Input placeholder="‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πà‡∏≤‡∏ß" />
                </Form.Item>

                <Form.Item label="‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏Ç‡πà‡∏≤‡∏ß" name="newsimagePath" rules={[{ required: true, message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' }]}>
                    <Upload 
                        listType="picture-card" 
                        fileList={newsFileList}
                        onChange={handleNewsChange}
                        maxCount={1}
                        beforeUpload={() => false}
                        showUploadList={{ showPreviewIcon: true }}>
                        {newsFileList.length >= 1 ? null : uploadButton}
                        {/* <Button icon={<UploadOutlined />}>‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ô‡∏±‡∏Å‡πÅ‡∏™‡∏î‡∏á</Button> */}
                    </Upload>
                </Form.Item>

                <Form.Item>
                <Button type="primary" htmlType="submit" block>
                    ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡πà‡∏≤‡∏ß
                </Button>
                </Form.Item>
            </Form>
        </div>
    )
};

export default AdminNewsForm;